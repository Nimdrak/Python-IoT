'''
Created on May 9, 2016

@author: nimdrak
'''
import os
import operator


#def search(dirname):

dirname='/home/cloud1/IoT/output_txt/link_data/interval_10_30_2_r_proper_mean/c_interval_10_30_2_0.09/4'        

filenames = os.listdir(dirname)
#for filename in filenames:
#    full_filename=os.path.join(dirname, filename)
#    ext = os.path.splitext(full_filename)[-1]                           
#    if ext == '.txt':
        #print(full_filename)
        
file_name=[]
data_vector=[]
all_data_vector=[]
sum_data_vector=[]

for (path, dir, files) in os.walk(dirname):
    for filename in files:
        ext = os.path.splitext(filename)[-1]
#        print filename
        if 'bw' in filename:
            print("%s %s" % (path, filename))
            file_name.append(filename)


#            print path+'/'+filename
            bw_data=open(path+'/'+file_name[0],'r')
            
            
            line=bw_data.readline()
            result=line.split()
            data_vector.append(result)
#            print data_vector
            
            while line:
                line=bw_data.readline()
                result=line.split()
                if result==[]:
                    break
                data_vector.append(result)
                
            #print data_vector
            all_data_vector.append(data_vector)
        

print all_data_vector[0]
print all_data_vector[1]
data_number=len(all_data_vector)
print data_number

for i in range(0,len(all_data_vector[0])):
    sum_data_vector.append(0)

#data_number=len(all_data_vector)   
for i in range(0,data_number):
    for j in range(0,len(all_data_vector[0])):
        sum_data_vector[j]=sum_data_vector[j]+float(all_data_vector[i][j][0])

print sum_data_vector
  
#print sum_data_vector
            

# 
# print bw_data
# 
#         f = open("/home/cloud1/IoT/cloud/Rest_API_Python/HttpClient/table/"+"OVS"+current+".txt",'r')
#         line=f.readline()
# 
#         while line:
#             result=line.split()
#             line=f.readline()
#             if not line:
#                 break
#             
#             if result[0]==after:
#                 dst_port_list[x-1] =result[2]
#                 print 'According to after table','current OVS',current,'AND must have dst port :',dst_port_list[x-1]
#                 break
#               

#for i in range(0,len(allo_result)):
#    data = str(allo_result[i]) + '\n'
#        
#    f_allo_result.write(data)
#f_allo_result.close()

#bw.data=close()




            
            
    